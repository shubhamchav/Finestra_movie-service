name: Movie Service CI/CD

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build movie-service
        run: mvn clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          docker build -t $ECR_REPOSITORY:latest .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            DB_URL="${{ secrets.DB_URL }}"
            DB_USERNAME="${{ secrets.DB_USERNAME }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            JWT_SECRET="${{ secrets.JWT_SECRET }}"
            AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}"
            AWS_SECRET_KEY="${{ secrets.AWS_SECRET_KEY }}"
            ECR_REGISTRY="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"
            ECR_REPOSITORY="${{ secrets.ECR_REPOSITORY }}"
            
            if ! command -v aws &> /dev/null; then
              echo "Installing AWS CLI..."
              sudo apt update -y
              sudo apt install -y unzip curl
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install
              aws --version
            fi

            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt update -y
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker $USER
            fi

            echo "Logging in to Amazon ECR..."
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

            echo "Stopping and removing old container..."
            docker stop movie-service || true
            docker rm movie-service || true
            
            echo "Pulling latest image from ECR..."
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest

            echo "Running new container..."
            echo "DB_URL='$DB_URL'"
            docker run -d --name movie-service \
              -e DB_URL="$DB_URL" \
              -e DB_USERNAME="$DB_USERNAME" \
              -e DB_PASSWORD="$DB_PASSWORD" \
              -e JWT_SECRET="$JWT_SECRET" \
              -e AWS_ACCESS_KEY="$AWS_ACCESS_KEY" \
              -e AWS_SECRET_KEY="$AWS_SECRET_KEY" \
              -p 8080:8080 \
              $ECR_REGISTRY/$ECR_REPOSITORY:latest

            echo "âœ… Deployment complete!"
